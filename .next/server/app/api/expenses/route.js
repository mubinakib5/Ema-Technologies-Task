"use strict";(()=>{var e={};e.id=879,e.ids=[879],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},9288:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>h,originalPathname:()=>y,requestAsyncStorage:()=>x,routeModule:()=>d,serverHooks:()=>g,staticGenerationAsyncStorage:()=>m,staticGenerationBailout:()=>w});var a={};r.r(a),r.d(a,{GET:()=>GET,POST:()=>POST}),r(8976);var o=r(884),n=r(6132),s=r(5798),i=r(1772),p=r(1185),u=r.n(p);let l=new(u()).Schema({amount:{type:Number,required:!0,min:0},category:{type:String,required:!0,enum:["Groceries","Transport","HealthCare","Utility","Charity"]},description:{type:String,required:!0,trim:!0},date:{type:Date,default:Date.now}},{timestamps:!0}),c=u().models.Expense||u().model("Expense",l);async function GET(){console.log("Fetching expenses...");try{await (0,i.Z)();let e=await c.find().sort({date:-1});return console.log(`Found ${e.length} expenses`),s.Z.json(e)}catch(e){return console.error("Database Error:",e),s.Z.json({error:"Failed to fetch expenses"},{status:500})}}async function POST(e){console.log("Creating new expense...");try{await (0,i.Z)();let t=await e.json();console.log("Expense data:",t);let r=await c.create({...t,date:new Date});return console.log("Created expense:",r),s.Z.json(r)}catch(e){return console.error("Database Error:",e),s.Z.json({error:"Failed to create expense"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/expenses/route",pathname:"/api/expenses",filename:"route",bundlePath:"app/api/expenses/route"},resolvedPagePath:"D:\\Website\\next\\ema\\src\\app\\api\\expenses\\route.js",nextConfigOutput:"",userland:a}),{requestAsyncStorage:x,staticGenerationAsyncStorage:m,serverHooks:g,headerHooks:h,staticGenerationBailout:w}=d,y="/api/expenses/route"}};var t=require("../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[955,772],()=>__webpack_exec__(9288));module.exports=r})();