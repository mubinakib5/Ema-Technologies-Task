"use strict";(()=>{var e={};e.id=738,e.ids=[738],e.modules={1185:e=>{e.exports=require("mongoose")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},6576:(e,t,r)=>{r.r(t),r.d(t,{headerHooks:()=>w,originalPathname:()=>_,requestAsyncStorage:()=>p,routeModule:()=>d,serverHooks:()=>h,staticGenerationAsyncStorage:()=>g,staticGenerationBailout:()=>y});var i={};r.r(i),r.d(i,{GET:()=>GET,POST:()=>POST}),r(8976);var o=r(884),a=r(6132),n=r(5798),s=r(1772),l=r(1185),u=r.n(l);let m=new(u()).Schema({category:{type:String,required:!0,enum:["Groceries","Transport","HealthCare","Utility","Charity"],unique:!0},amount:{type:Number,required:!0,min:0}},{timestamps:!0}),c=u().models.Limit||u().model("Limit",m);async function GET(){console.log("Fetching limits...");try{await (0,s.Z)();let e=await c.find();return console.log(`Found ${e.length} limits`),n.Z.json(e)}catch(e){return console.error("Database Error:",e),n.Z.json({error:"Failed to fetch limits"},{status:500})}}async function POST(e){console.log("Setting new limit...");try{await (0,s.Z)();let{category:t,amount:r}=await e.json();console.log("Limit data:",{category:t,amount:r});let i=await c.findOneAndUpdate({category:t},{amount:r},{upsert:!0,new:!0});return console.log("Updated/Created limit:",i),n.Z.json(i)}catch(e){return console.error("Database Error:",e),n.Z.json({error:"Failed to set limit"},{status:500})}}let d=new o.AppRouteRouteModule({definition:{kind:a.x.APP_ROUTE,page:"/api/limits/route",pathname:"/api/limits",filename:"route",bundlePath:"app/api/limits/route"},resolvedPagePath:"D:\\Website\\next\\ema\\src\\app\\api\\limits\\route.js",nextConfigOutput:"",userland:i}),{requestAsyncStorage:p,staticGenerationAsyncStorage:g,serverHooks:h,headerHooks:w,staticGenerationBailout:y}=d,_="/api/limits/route"}};var t=require("../../../webpack-runtime.js");t.C(e);var __webpack_exec__=e=>t(t.s=e),r=t.X(0,[955,772],()=>__webpack_exec__(6576));module.exports=r})();